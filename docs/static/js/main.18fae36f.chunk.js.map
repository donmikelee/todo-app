{"version":3,"sources":["components/Form.js","components/Todo.js","components/TodoList.js","App.js","reportWebVitals.js","index.js"],"names":["Form","setInputText","todos","setTodos","inputText","setStatus","value","onChange","e","target","type","className","onClick","preventDefault","text","completed","id","Math","random","name","Todo","todo","map","item","filter","el","TodoList","filteredTodos","i","draggableId","index","provided","snapshot","ref","innerRef","draggableProps","dragHandleProps","App","useState","status","setFilteredTodos","useEffect","getLocalTodos","filterHandler","localStorage","setItem","JSON","stringify","getItem","todoLocal","parse","onDragEnd","param","srcI","source","desI","destination","splice","droppableId","_","droppableProps","placeholder","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.18fae36f.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nconst Form = ({ setInputText, todos, setTodos, inputText, setStatus }) => {\r\n  const inputTextHandler = (e) => {\r\n    setInputText(e.target.value);\r\n  };\r\n  const submitTodoHandler = (e) => {\r\n    e.preventDefault();\r\n    setTodos([\r\n      ...todos,\r\n      { text: inputText, completed: false, id: Math.random() * 1000 },\r\n    ]);\r\n    setInputText(\"\");\r\n  };\r\n  const statusHandler = (e) =>{\r\n    setStatus(e.target.value);\r\n  }\r\n  return (\r\n    <form>\r\n      <input\r\n        value={inputText}\r\n        onChange={inputTextHandler}\r\n        type=\"text\"\r\n        className=\"todo-input\"\r\n      />\r\n      <button onClick={submitTodoHandler} className=\"todo-button\" type=\"submit\">\r\n        <i className=\"fas fa-plus-square\"></i>\r\n      </button>\r\n      <div className=\"select\">\r\n        <select onChange={statusHandler} name=\"todos\" className=\"filter-todo\">\r\n          <option value=\"all\">All</option>\r\n          <option value=\"completed\">Completed</option>\r\n          <option value=\"uncompleted\">Uncompleted</option>\r\n        </select>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default Form;\r\n","import React from \"react\";\r\n\r\nconst Todo = ( {text, todo, todos, setTodos} ) => {\r\n    //Events\r\n    const deleteHandler = () => {\r\n        setTodos(todos.filter(el => el.id !== todo.id))\r\n    };\r\n    const completeHandler = () => {\r\n        setTodos(\r\n            todos.map((item) => {\r\n                if (item.id === todo.id) {\r\n                  return {\r\n                    ...item, completed: !item.completed\r\n                  };\r\n                }\r\n                return item;\r\n            })\r\n        );\r\n    }\r\n    return(\r\n        <div className=\"todo\">\r\n            <li className={`todo-item ${todo.completed ? \"completed\" : \"\"}`}>{text}</li>\r\n            <button onClick={completeHandler} className=\"complete-btn\">\r\n                <i className=\"fas fa-check\"></i>\r\n            </button>\r\n            <button onClick={deleteHandler} className=\"trash-btn\">\r\n                <i className=\"fas fa-trash\"></i> \r\n            </button>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Todo;","import React from \"react\";\r\n//Import Components\r\nimport Todo from \"./Todo\";\r\nimport { Draggable } from 'react-beautiful-dnd';\r\n\r\n\r\nconst TodoList = ({ setTodos, todos, filteredTodos }) => {\r\n  // console.log(filteredTodos);\r\n  // console.log(todos);\r\n  // console.log(TodoList);\r\n  return (\r\n    <div className=\"todo-container\">\r\n      <ul className=\"todo-list\">\r\n        {filteredTodos.map((todo, i) => (\r\n          <Draggable key={todo.id} draggableId={'draggable-' + todo.id} index={i}>\r\n              {(provided, snapshot) => (\r\n                <div ref={provided.innerRef}{...provided.draggableProps}\r\n                {...provided.dragHandleProps}\r\n                >\r\n                <Todo \r\n                setTodos={setTodos} \r\n                todos={todos} \r\n                key={todo.id}\r\n                todo={todo}\r\n                text={todo.text}>\r\n              </Todo>\r\n              </div>\r\n              )}\r\n          </Draggable>\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TodoList;\r\n","import React, { useState, useEffect } from \"react\";\nimport \"./App.css\";\n//Importing Components\nimport Form from \"./components/Form\";\nimport TodoList from \"./components/TodoList\";\nimport { DragDropContext, Droppable } from \"react-beautiful-dnd\";\n\nfunction App() {\n  //State stuff\n  const [inputText, setInputText] = useState(\"\");\n  const [todos, setTodos] = useState([]);\n  const [status, setStatus] = useState(\"all\");\n  const [filteredTodos, setFilteredTodos] = useState([]);\n  //RUN ONCE whem the app start\n  useEffect(() => {\n    getLocalTodos();\n  }, []);\n  //Use Effect\n  useEffect(() => {\n    const filterHandler = () => {\n      switch (status) {\n        case \"completed\":\n          setFilteredTodos(todos.filter((todo) => todo.completed === true));\n          break;\n        case \"uncompleted\":\n          setFilteredTodos(todos.filter((todo) => todo.completed === false));\n          break;\n        default:\n          setFilteredTodos(todos);\n          break;\n      }\n    };\n    const saveLocalTodos = () => {\n      localStorage.setItem(\"todos\", JSON.stringify(todos));\n    };\n    filterHandler();\n    saveLocalTodos();\n  }, [todos, status]);\n  //Functions\n  //Save to local\n  const getLocalTodos = () => {\n    if (localStorage.getItem(\"todos\") === null) {\n      localStorage.setItem(\"todos\", JSON.stringify([]));\n    } else {\n      let todoLocal = JSON.parse(localStorage.getItem(\"todos\"));\n      setTodos(todoLocal);\n    }\n  };\n  return (\n    <div className=\"App\">\n      <DragDropContext\n        onDragEnd={(param) => {\n          const srcI = param.source.index;\n          const desI = param.destination?.index;\n          if (desI) {\n            todos.splice(desI, 0, todos.splice(srcI, 1)[0]);\n            localStorage.setItem(\"todos\", JSON.stringify(todos));\n          }\n        }}\n      >\n        <header>\n          <h1>Micha≈Ç's Todo List</h1>\n        </header>\n        <Form\n          inputText={inputText}\n          todos={todos}\n          setTodos={setTodos}\n          setInputText={setInputText}\n          setStatus={setStatus}\n        ></Form>\n        <Droppable droppableId=\"droppable-1\">\n          {(provided, _) => (\n            <div ref={provided.innerRef} {...provided.droppableProps}>\n              <TodoList\n                filteredTodos={filteredTodos}\n                setTodos={setTodos}\n                todos={todos}\n              ></TodoList>\n              {provided.placeholder}\n            </div>\n          )}\n        </Droppable>\n      </DragDropContext>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}